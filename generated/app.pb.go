// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: app.proto

package example

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("app.proto", fileDescriptor_e0f9056a14b86d47) }

var fileDescriptor_e0f9056a14b86d47 = []byte{
	// 533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0x41, 0x6e, 0x13, 0x3f,
	0x14, 0xc6, 0x35, 0xcd, 0x5f, 0xa9, 0x6a, 0x45, 0xff, 0x24, 0xae, 0x54, 0xa9, 0x43, 0x17, 0x56,
	0x96, 0x23, 0x32, 0x2e, 0x21, 0xab, 0xb0, 0x21, 0x40, 0x05, 0x1b, 0x24, 0x14, 0xc1, 0x86, 0x9d,
	0x67, 0xe6, 0x75, 0x62, 0x34, 0xb1, 0x5d, 0xdb, 0x21, 0xad, 0x80, 0x0d, 0x47, 0x08, 0x3b, 0x24,
	0x2e, 0x80, 0xc4, 0x09, 0x38, 0x02, 0x0b, 0x16, 0x5c, 0x81, 0x03, 0x70, 0x04, 0x14, 0x3b, 0x49,
	0x87, 0x4c, 0x2a, 0x22, 0x76, 0xf3, 0xbe, 0xcf, 0xcf, 0xf3, 0xf3, 0x9b, 0x6f, 0x8c, 0x0e, 0x98,
	0x52, 0xb1, 0xd2, 0xd2, 0x4a, 0xbc, 0x0f, 0x97, 0x6c, 0xa2, 0x0a, 0x08, 0x6f, 0xbb, 0x3a, 0xed,
	0xe6, 0x20, 0xba, 0x66, 0xc6, 0xf2, 0x1c, 0x34, 0x95, 0xca, 0x72, 0x29, 0x0c, 0x65, 0x42, 0x48,
	0xcb, 0xdc, 0xb3, 0x6f, 0x0b, 0x4f, 0x72, 0x29, 0xf3, 0x02, 0x28, 0x53, 0x7c, 0x8b, 0x7b, 0x6b,
	0xe9, 0xba, 0x2a, 0x99, 0x9e, 0x53, 0x98, 0x28, 0x7b, 0xb5, 0x34, 0x1b, 0x0a, 0xb4, 0x91, 0xc2,
	0x57, 0xbd, 0x5f, 0x75, 0x54, 0x1b, 0x2a, 0x85, 0xbf, 0x06, 0xa8, 0xf1, 0x50, 0x03, 0xb3, 0xf0,
	0xcc, 0xd9, 0xf8, 0x24, 0x5e, 0x92, 0xc5, 0x65, 0x79, 0x04, 0x17, 0x53, 0x30, 0x36, 0x6c, 0xae,
	0x5d, 0xaf, 0x77, 0xde, 0xce, 0x87, 0x09, 0x6e, 0xf9, 0xa5, 0x86, 0x30, 0xe2, 0x5f, 0x12, 0x46,
	0x9b, 0x0a, 0x61, 0x22, 0x23, 0x1a, 0xec, 0x54, 0x0b, 0x62, 0xc7, 0x40, 0x04, 0xcc, 0x88, 0xdf,
	0xa2, 0xd7, 0x62, 0x4a, 0x15, 0x3c, 0x75, 0x27, 0xa1, 0xaf, 0x8c, 0x14, 0x83, 0x8a, 0xf2, 0xfe,
	0xc7, 0xcf, 0x0f, 0x7b, 0xed, 0x4e, 0xc3, 0x9d, 0xdb, 0x6f, 0x68, 0x06, 0x41, 0x84, 0x3f, 0x05,
	0xe8, 0xe0, 0x31, 0xd8, 0x25, 0xfa, 0xf1, 0x1a, 0x6e, 0xad, 0xdd, 0xc8, 0x9d, 0xcd, 0x87, 0x4f,
	0x70, 0x6b, 0xe4, 0x80, 0x4a, 0xdc, 0x15, 0x65, 0x67, 0xba, 0x43, 0xdc, 0x2e, 0xd3, 0xd1, 0x37,
	0x3c, 0x7b, 0x87, 0xbf, 0x04, 0x08, 0xad, 0x59, 0x0c, 0x0e, 0xab, 0x80, 0x66, 0x45, 0xd8, 0xda,
	0x20, 0x34, 0x9d, 0x8b, 0xf9, 0xf0, 0x25, 0x3e, 0xbe, 0x06, 0x2a, 0xb8, 0xb1, 0x44, 0x9e, 0x2f,
	0xc1, 0x4c, 0x78, 0xb3, 0xb5, 0x33, 0xf4, 0xff, 0xf8, 0x8f, 0x91, 0x2e, 0x78, 0x1b, 0x2f, 0x54,
	0xb6, 0x2d, 0x0d, 0x65, 0x79, 0xc5, 0x7c, 0x14, 0xfb, 0xc0, 0xc5, 0xab, 0xc0, 0xc5, 0x67, 0x8b,
	0xc0, 0x75, 0x72, 0x37, 0x5c, 0xdf, 0x51, 0x1e, 0xee, 0xa6, 0xb2, 0x33, 0xe7, 0x51, 0x58, 0x1d,
	0xee, 0xe2, 0xfb, 0x7f, 0x0e, 0x50, 0xe3, 0x11, 0x14, 0xb0, 0x85, 0xb7, 0x2c, 0xff, 0x8d, 0xd7,
	0x85, 0xa1, 0xed, 0x3b, 0xae, 0xe9, 0x4c, 0xd8, 0xf4, 0xc0, 0xff, 0x10, 0x86, 0xa8, 0xca, 0xfb,
	0xe0, 0x7b, 0x30, 0x1f, 0x7e, 0x0b, 0x30, 0xa0, 0xe6, 0x99, 0x67, 0x24, 0x06, 0xf4, 0x6b, 0x9e,
	0x42, 0xe7, 0x29, 0x42, 0x23, 0x99, 0x90, 0xe7, 0xec, 0xaa, 0x90, 0x1a, 0x47, 0x63, 0x6b, 0x95,
	0x19, 0x50, 0x9a, 0x73, 0x3b, 0x9e, 0x26, 0x71, 0x2a, 0x27, 0x54, 0xcb, 0x44, 0x8a, 0x54, 0x66,
	0x40, 0x73, 0x10, 0x1c, 0xba, 0xab, 0xdb, 0xe3, 0x70, 0x6d, 0xdc, 0xcf, 0x27, 0x8c, 0x17, 0x8b,
	0xc5, 0xbd, 0xda, 0x9d, 0xf8, 0x34, 0x0a, 0x82, 0x5d, 0x68, 0x47, 0xf7, 0x50, 0xad, 0x7f, 0xda,
	0xc7, 0x7d, 0x14, 0xf9, 0x34, 0x41, 0x46, 0x66, 0x63, 0xf0, 0xff, 0xa8, 0x06, 0x23, 0xa7, 0x3a,
	0x05, 0x92, 0x49, 0x30, 0x44, 0x48, 0x4b, 0xe0, 0x92, 0x1b, 0x1b, 0xe3, 0x3a, 0xfa, 0xef, 0xe3,
	0x5e, 0xb0, 0x9f, 0xd4, 0xdd, 0x1c, 0xef, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xb4, 0xad, 0x1f,
	0x44, 0xd8, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AppClient is the client API for App service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AppClient interface {
	CreatePerson(ctx context.Context, in *CreatePersonRequest, opts ...grpc.CallOption) (*Person, error)
	GetPerson(ctx context.Context, in *GetPersonRequest, opts ...grpc.CallOption) (*Person, error)
	GetPersons(ctx context.Context, in *GetPersonsRequest, opts ...grpc.CallOption) (*Persons, error)
	UpdatePerson(ctx context.Context, in *UpdatePersonRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeletePerson(ctx context.Context, in *DeletePersonRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type appClient struct {
	cc *grpc.ClientConn
}

func NewAppClient(cc *grpc.ClientConn) AppClient {
	return &appClient{cc}
}

func (c *appClient) CreatePerson(ctx context.Context, in *CreatePersonRequest, opts ...grpc.CallOption) (*Person, error) {
	out := new(Person)
	err := c.cc.Invoke(ctx, "/example.App/CreatePerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) GetPerson(ctx context.Context, in *GetPersonRequest, opts ...grpc.CallOption) (*Person, error) {
	out := new(Person)
	err := c.cc.Invoke(ctx, "/example.App/GetPerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) GetPersons(ctx context.Context, in *GetPersonsRequest, opts ...grpc.CallOption) (*Persons, error) {
	out := new(Persons)
	err := c.cc.Invoke(ctx, "/example.App/GetPersons", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) UpdatePerson(ctx context.Context, in *UpdatePersonRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/example.App/UpdatePerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) DeletePerson(ctx context.Context, in *DeletePersonRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/example.App/DeletePerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppServer is the server API for App service.
type AppServer interface {
	CreatePerson(context.Context, *CreatePersonRequest) (*Person, error)
	GetPerson(context.Context, *GetPersonRequest) (*Person, error)
	GetPersons(context.Context, *GetPersonsRequest) (*Persons, error)
	UpdatePerson(context.Context, *UpdatePersonRequest) (*empty.Empty, error)
	DeletePerson(context.Context, *DeletePersonRequest) (*empty.Empty, error)
}

// UnimplementedAppServer can be embedded to have forward compatible implementations.
type UnimplementedAppServer struct {
}

func (*UnimplementedAppServer) CreatePerson(ctx context.Context, req *CreatePersonRequest) (*Person, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePerson not implemented")
}
func (*UnimplementedAppServer) GetPerson(ctx context.Context, req *GetPersonRequest) (*Person, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPerson not implemented")
}
func (*UnimplementedAppServer) GetPersons(ctx context.Context, req *GetPersonsRequest) (*Persons, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPersons not implemented")
}
func (*UnimplementedAppServer) UpdatePerson(ctx context.Context, req *UpdatePersonRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePerson not implemented")
}
func (*UnimplementedAppServer) DeletePerson(ctx context.Context, req *DeletePersonRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePerson not implemented")
}

func RegisterAppServer(s *grpc.Server, srv AppServer) {
	s.RegisterService(&_App_serviceDesc, srv)
}

func _App_CreatePerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).CreatePerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.App/CreatePerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).CreatePerson(ctx, req.(*CreatePersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_GetPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).GetPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.App/GetPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).GetPerson(ctx, req.(*GetPersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_GetPersons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPersonsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).GetPersons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.App/GetPersons",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).GetPersons(ctx, req.(*GetPersonsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_UpdatePerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).UpdatePerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.App/UpdatePerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).UpdatePerson(ctx, req.(*UpdatePersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_DeletePerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).DeletePerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.App/DeletePerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).DeletePerson(ctx, req.(*DeletePersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _App_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.App",
	HandlerType: (*AppServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePerson",
			Handler:    _App_CreatePerson_Handler,
		},
		{
			MethodName: "GetPerson",
			Handler:    _App_GetPerson_Handler,
		},
		{
			MethodName: "GetPersons",
			Handler:    _App_GetPersons_Handler,
		},
		{
			MethodName: "UpdatePerson",
			Handler:    _App_UpdatePerson_Handler,
		},
		{
			MethodName: "DeletePerson",
			Handler:    _App_DeletePerson_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app.proto",
}
